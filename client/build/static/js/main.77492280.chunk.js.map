{"version":3,"sources":["components/Layout/Header/Header.js","components/Layout/Footer/Footer.js","context.js","components/Filter/Filter.js","components/Notes/NewNote/NewNote.js","components/Sort/Sort.js","utilys/getNotesByType.js","utilys/axios.js","components/Notes/Note/Note.js","components/Notes/Notes.js","utilys/validation.js","components/UI/ValidationErrMesages/ValidationErrMesages.js","components/Notes/CreateNoteForm/CreateNoteForm.js","hooks/useForm.js","components/UI/CreateNoteModal/CreateNoteModal.js","components/NoteMenager/NoteMenager.js","components/Drafts/Drafts.js","components/NavBar/NavBar.js","utilys/getSingleNoteById.js","components/Notes/EditNote/EditNoteForm/EditNoteForm.js","components/Notes/EditNote/EditNote.js","components/UI/Alert/Alert.js","App.js","serviceWorker.js","index.js","assets/logo.png"],"names":["header","className","src","logo","alt","Footer","NotesContext","createContext","Filter","useState","cloneNotes","setCloneNotes","useContext","notesState","setNotesState","useEffect","type","placeholder","name","onChange","e","enteredInputValue","target","value","console","log","filteredArr","filter","note","RegExp","test","title","toLowerCase","notes","NewNote","onClick","toogle","Sort","sortedNotes","sort","a","b","Date","parse","date","getNotesByType","status","instance","axios","create","baseURL","Note","props","socket","io","body","author_name","id","history","useHistory","filterNote","emit","data","delete","removeNoteHandler","push","Notes","publishedNotes","map","key","author__name","valid","validData","messages","trim","length","ValidationErrMesages","errMessages","msg","CreateNoteForm","getInputValue","finishAddNote","saveToDrafts","useForm","formData","inputs","setInputs","Modal","React","uuid","toLocaleDateString","singleNote","upNote","setErrMessages","preventDefault","alert","active","color","setTimeout","post","NoteMenager","createNoteModal","CreateNoteModal","Drafts","draftNotes","finishAddDraftNote","draft","draftIndex","findIndex","matchDraft","navBar","to","getSingleNoteById","find","toString","EditNoteForm","updateNoteHandler","updateNoteInput","single","EditNote","useParams","edit","index","put","Alert","style","Fragment","App","on","get","then","path","exact","render","Boolean","window","location","hostname","match","ReactDOM","children","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.77492280.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport \"./Header.css\"\r\nimport logo from \"../../../assets/logo.png\";\r\nconst header = () => {\r\n    return (\r\n        <div>\r\n           <header className=\"Header\">\r\n           NOTES APP\r\n            <div>\r\n                <img className=\"logo\" src={logo} alt=\"logo\" />\r\n            </div>\r\n           </header> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default header;\r\n","import React from 'react'\r\nimport \"./Footer.css\"\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"Footer\">\r\n        <i className=\"mr-2 fa fa-copyright\"></i><span>by Bojan</span>\r\n        </div>\r\n    )\r\n}\r\n","import React,{createContext,useState} from \"react\"\r\n\r\nexport const NotesContext = createContext()\r\nexport const  NotesProvider =({children})=>{\r\n    const notesState = useState({ \r\n        toogle : false,\r\n        notes:[],\r\n        singleNote:null,\r\n        cloneNotes:[],\r\n        alert:{\r\n            active:false,\r\n            msg:\"test\"\r\n        },\r\n        test:\"hello\"\r\n    })\r\n    return(\r\n        <NotesContext.Provider value={notesState}>\r\n                {children}\r\n        </NotesContext.Provider>\r\n    )\r\n }\r\n","import React, { useContext, useEffect  , useState} from 'react';\r\nimport \"./Filter.css\"\r\nimport {NotesContext} from \"../../context\"\r\nconst Filter = () => {\r\n    const [cloneNotes , setCloneNotes] = useState([])\r\n     const  [notesState  , setNotesState] = useContext(NotesContext);\r\nuseEffect(() => {\r\n    setCloneNotes(notesState.cloneNotes)\r\n},[notesState.cloneNotes])\r\nconst filterInputValue = (e) => {\r\n    let enteredInputValue = e.target.value;\r\n    console.log(cloneNotes)\r\n    const filteredArr = cloneNotes.filter((note) => {\r\n    var startsWith = new RegExp('^' + enteredInputValue);\r\n    return startsWith.test(note.title.toLowerCase());\r\n})\r\n    setNotesState({...notesState,notes:filteredArr});\r\n}\r\n    return (  \r\n        <div className=\"form-group Filter\">\r\n        <input type=\"text\" className=\"form-control\" placeholder=\"Filter Notes\" name=\"title\"  onChange={filterInputValue}/>\r\n      </div>  \r\n        \r\n    );\r\n}\r\n\r\nexport default Filter;\r\n","import React,{ useContext } from 'react';\r\nimport \"./NewNote.css\"\r\nimport {NotesContext} from \"../../../context\"\r\nconst NewNote = () => {\r\n    const [notesState , setNotesState] = useContext(NotesContext);\r\n    const toogleNewNoteModal = () => {\r\n    setNotesState({...notesState, toogle : true});\r\n}\r\n    return (\r\n            <button className=\"NewNoteBtn\" onClick={toogleNewNoteModal}>\r\n                <i className=\"fa fa-plus mr-1\"></i>New Note\r\n             </button>\r\n    );\r\n}\r\n\r\nexport default NewNote;\r\n","import React , { useContext }  from 'react';\r\nimport \"./Sort.css\"\r\nimport { NotesContext } from \"../../context\"\r\nconst Sort = () => {\r\n     const  [notesState , setNotesState] = useContext(NotesContext);\r\nconst sortByDateBtn = () => {\r\n     console.log(notesState.notes)\r\n     let sortedNotes = notesState.notes.sort((a, b) => Date.parse(b.date) - Date.parse(a.date))\r\n     setNotesState({...notesState, notes : sortedNotes});\r\n   }\r\n    return (\r\n         <button className=\"btn btn-success\" onClick={sortByDateBtn}>\r\n              <i className=\"mr-1 fa fa-sort\"></i>\r\n               SortByDate\r\n          </button>\r\n    );\r\n}\r\n\r\nexport default Sort;\r\n","export const getNotesByType = (notes, type) => notes.filter(note => note.status === type)","import Axios from \"axios\";\r\n\r\nimport axios from \"axios\"\r\nconst instance = axios.create({\r\n    baseURL: 'https://my-notes-app-api.herokuapp.com'\r\n  });\r\nexport default instance;  ","import React ,{ useContext }from 'react';\r\nimport \"./Note.css\";\r\nimport { NotesContext } from \"../../../context\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport axios from \"../../../utilys/axios\"\r\nconst Note = (props) => {\r\n    let socket = io(\"http://localhost:4000\");\r\n    let { title,body,author_name,id } = props;\r\n    const [notesState,setNotesState] = useContext(NotesContext);\r\n    let history = useHistory()\r\n    const removeNoteHandler = (id,title) => {\r\n    const filterNote = notesState.cloneNotes.filter(note => note.id !== id);\r\n    socket.emit(\"deleteNote\",{data:filterNote,title})\r\n    console.log(id)\r\n    axios.delete(`/notes/${id}`)\r\n\r\n}\r\nconst editNoteHandler = note => {\r\n    console.log(note)\r\n    history.push(`/note/${note.id}`)\r\n    \r\n}\r\n    return (\r\n <div className=\"Note col-lg-3 col-md-4 col-sm-6\">\r\n          <div className=\"card\">\r\n           <div className=\"card-body\">\r\n              <h2 className=\"card-title\">{title}</h2>\r\n              <p className=\"card-text\">{body}</p>\r\n              <h3 className=\"card-subtitle mb-2 text-muted\">{author_name}</h3>\r\n             <button className=\"w-100 btn btn-danger\" onClick={()=>removeNoteHandler(id,title)}>Delete Note</button>\r\n             <button className=\"w-100 btn btn-warning mt-2 d-block\" onClick={() => editNoteHandler(props.note)}>Edit Note</button>\r\n          </div>\r\n                </div>     \r\n                    </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Note;\r\n","import React  from 'react';\r\nimport { getNotesByType } from '../../utilys/getNotesByType';\r\nimport Note from \"./Note/Note\";\r\nimport \"./Notes.css\";\r\nconst Notes = ( props ) => {\r\nlet { notes } = props;\r\nlet publishedNotes = getNotesByType(notes,\"published\");\r\n    return (\r\n    <div className=\"text-center container notes\">\r\n        <div className=\"row\">\r\n                {publishedNotes.map(note=>(\r\n                <Note\r\n                note={note}\r\n                key={note.id}\r\n                notes={publishedNotes}\r\n                title={note.title}\r\n                body={note.body}\r\n                author_name={note.author__name}\r\n                id={note.id}/> ))}\r\n    </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notes;\r\n","function valid (title , author__name , body){\r\n    let validData = {\r\n      valid:true,\r\n      messages:[]\r\n    }\r\n    if(title.trim().length < 4){\r\n        validData.messages.push(\"Title should have minumum 4 charachters\")\r\n        validData.valid = false;\r\n    }\r\n    if(author__name.trim().length < 6){\r\n        validData.messages.push(\"Author_name should have minumum 6 charachters\")\r\n        validData.valid = false;\r\n}\r\n    if(body.trim().length < 10){\r\n      validData.messages.push(\"Body should have minumum 10 charachters\")\r\n      validData.valid = false;\r\n  }\r\n      return validData;\r\n   \r\n   \r\n  }\r\n\r\n  export default valid;","import React from 'react'\r\nimport \"./error.css\"\r\nfunction ValidationErrMesages({errMessages}) {\r\n    return (\r\n        <div className=\"messages\">\r\n        {errMessages.length > 0 \r\n        ? errMessages.map(msg => <p className=\"text-danger\">{msg}</p>)\r\n        : null}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ValidationErrMesages\r\n","import React from 'react'\r\n\r\nfunction CreateNoteForm({getInputValue,finishAddNote,saveToDrafts}) {\r\n    return (\r\n        <form>\r\n        <div className=\"form-group\">\r\n          <label >Note Title</label>\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Enter Note Title\" name=\"title\"  onChange={getInputValue}/>\r\n        \r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Note  Body</label>\r\n          <textarea  className=\"form-control\"  placeholder=\"Enter Note Body\" name=\"body\"  onChange={getInputValue}/>\r\n        </div>\r\n      \r\n        <div className=\"form-group\">\r\n        <label >Note Author Name</label>\r\n        <input  className=\"form-control\" placeholder=\"Enter Note Author Name\" name=\"author__name\" onChange={getInputValue}/>\r\n      </div>\r\n      <div className=\"modalButtons\">\r\n      <button   className=\"btn btn-primary\" onClick={finishAddNote} >Publish</button>\r\n      <button className=\"ml-2 btn btn-warning\" onClick={saveToDrafts} >Save Note to Drafts</button>\r\n      </div>\r\n      \r\n      </form>\r\n    )\r\n}\r\n\r\nexport default CreateNoteForm\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (formData) => {\r\n    const [inputs , setInputs] = useState(formData);\r\n    console.log(formData)\r\n    \r\n    function setInputValue (e) {\r\n        setInputs({...inputs,[e.target.name]:e.target.value})\r\n    }\r\nreturn [inputs , setInputValue] \r\n}\r\n\r\n","import React,{useContext,useState} from 'react';\r\nimport \"./Modal.css\";\r\nimport uuid from \"uuid\";\r\nimport {NotesContext} from \"../../../context\";\r\nimport valid from '../../../utilys/validation';\r\nimport ValidationErrMesages from '../ValidationErrMesages/ValidationErrMesages';\r\nimport CreateNoteForm from '../../Notes/CreateNoteForm/CreateNoteForm';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { io } from \"socket.io-client\"\r\nimport axios from \"../../../utilys/axios\"\r\nfunction Modal(){\r\n  const [notesState , setNotesState] = useContext(NotesContext);\r\n  let socket = io(\"http://localhost:4000\");\r\n  React.useEffect(() => {\r\n\r\n  },[])\r\n  const [singleNote , upNote] = useForm({\r\n      title : \"\",\r\n      author__name : \"\",\r\n      body : \"\",\r\n      id:uuid(),\r\n      date:new Date().toLocaleDateString()\r\n  })\r\n  const [errMessages , setErrMessages] = useState([])\r\n  let {title , author__name , body} = singleNote\r\n  const finishAddNote = (e) => {\r\n    \r\n    e.preventDefault()\r\n//  Check all inputes all valid\r\n    if(valid(title,author__name , body).valid){\r\n      // Update sinlge note status\r\n      singleNote.status = \"published\"\r\n      // Update global notes state\r\n      setNotesState({\r\n        ...notesState,\r\n        toogle:false,\r\n        notes:[...notesState.notes,singleNote] , \r\n        cloneNotes:[...notesState.cloneNotes , singleNote],\r\n        alert:{active:true,msg:`Note ${singleNote.title} is published`,color:\"green\"}\r\n        })\r\n        // Reset alert\r\n        setTimeout(() => {\r\n         setNotesState({\r\n            ...notesState,\r\n            toogle:false,\r\n            notes:[...notesState.notes,singleNote],\r\n            cloneNotes:[...notesState.cloneNotes,singleNote],\r\n            alert:{active:false,msg:\"\",color:\"\"}}   \r\n            )},3000)\r\n            socket.emit(\"addNote\",[...notesState.notes,singleNote])\r\n            axios.post(\"/notes\",singleNote)\r\n    }\r\n    else{\r\n        setErrMessages(valid(title,author__name , body).messages);\r\n    }\r\n  }      \r\n  const saveToDrafts = (e) => {\r\n    e.preventDefault()\r\n   \r\n    // socket.emit(\"test\" , [...notesState.notes,singleNote]);\r\n    if(valid(title,author__name,body).valid){\r\n      singleNote.status = \"drafts\";\r\n     \r\n      setNotesState({...notesState,toogle : false,notes : [...notesState.notes,singleNote]});\r\n\r\n    }\r\n  \r\n    else{\r\n      setErrMessages(valid(title,author__name , body).messages);\r\n    }\r\n    \r\n  }\r\n  const closeModal = () => {\r\n    setNotesState({...notesState, toogle : false});\r\n  }\r\n    return (\r\n        <div className=\"Modal\">\r\n        <p className=\"text-right text-danger\" onClick={closeModal}><i className=\"fa fa-close\"></i></p>\r\n      <CreateNoteForm\r\n      getInputValue={upNote}\r\n      saveToDrafts={saveToDrafts}\r\n      finishAddNote={finishAddNote}\r\n\r\n      />\r\n      <ValidationErrMesages errMessages={errMessages}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import React,{ useContext } from 'react';\r\nimport Filter from \"../Filter/Filter\";\r\nimport NewNote from \"../Notes/NewNote/NewNote\";\r\nimport Sort from \"../Sort/Sort\";\r\nimport Notes from \"../Notes/Notes\";\r\nimport CreateNoteModal from \"../UI/CreateNoteModal/CreateNoteModal\";\r\nimport { NotesContext } from \"../../context\";\r\nimport \"./NoteMenager.css\";\r\nconst NoteMenager = () => {\r\nconst [ notesState ] = useContext(NotesContext)\r\nlet createNoteModal = null\r\n  if(notesState.toogle){\r\n    createNoteModal = <CreateNoteModal/>\r\n  }\r\n    return (\r\n        <div>\r\n        <Filter/>\r\n        {createNoteModal}\r\n            <div className=\"ButtonsGroup\">\r\n                <NewNote />\r\n                <Sort />\r\n            </div>\r\n            <Notes  notes={notesState.notes} />\r\n        </div>\r\n    );\r\n}\r\nexport default NoteMenager;\r\n","import React,{ useContext } from 'react';\r\nimport \"./Drafts.css\"\r\nimport { NotesContext } from \"../../context\"\r\nimport { getNotesByType } from '../../utilys/getNotesByType';\r\n\r\n\r\nconst Drafts = (props) => {\r\nlet { notes } = props;\r\nconst[notesState , setNotesState] = useContext(NotesContext);\r\nlet draftNotes = getNotesByType(notes,\"drafts\");\r\n\r\nconst finishAddDraftNote = (draft) => {\r\n      let cloneNotes = [...notesState.notes];\r\n      let draftIndex = cloneNotes.findIndex(note => note.id === draft.id);\r\n      let matchDraft = cloneNotes[draftIndex];\r\n      matchDraft.status = \"published\";\r\n      cloneNotes[draftIndex] = matchDraft;\r\n      setNotesState({...notesState , notes:cloneNotes , cloneNotes});\r\n}\r\nlet draft=null\r\n if(draftNotes.length === 0){\r\n   draft = <h1 className=\"text-center\">Emty Drafts</h1> \r\n }\r\n    return (\r\n        <div className=\"container Drafts\">\r\n        {draft}\r\n        <div className=\"row\">\r\n          {draftNotes.map(draft => (\r\n            <div className=\"card  text-center col-lg-4  \" key={draft.id}>\r\n            <div className=\"card-body\">\r\n              <h2 className=\"card-title\">{draft.title}</h2>\r\n              <p className=\"card-text\">{draft.body}</p>\r\n              <h3 className=\"card-subtitle mb-2 text-muted\">{draft.author_name}</h3>\r\n              <button   className=\"btn btn-primary\" onClick={()=>finishAddDraftNote(draft)} >Publish</button>\r\n            </div>\r\n          </div>\r\n          ))}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Drafts;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./NavBar.css\"\r\n\r\nconst navBar = () => {\r\n    return (\r\n<div className=\"Nav\">\r\n  <div className=\"NavLinks\">\r\n    <Link  to=\"/\">Home</Link>\r\n    <Link  to=\"/drafts\">Drafts</Link>\r\n  </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default navBar;\r\n","export const getSingleNoteById = (id , notes) => notes.find(note => note.id.toString() === id);    ","import React, { useContext, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { NotesContext } from '../../../../context';\r\nimport { useForm } from '../../../../hooks/useForm';\r\nimport { getSingleNoteById } from '../../../../utilys/getSingleNoteById';\r\nimport ValidationErrMesages from '../../../UI/ValidationErrMesages/ValidationErrMesages';\r\nimport \"../EditNote.css\";\r\nfunction EditNoteForm({singleNote , updateNoteHandler , updateNoteInput , errMessages,id,single}) {\r\n \r\n    const history = useHistory()\r\n    if(!singleNote){\r\n        history.push(\"/\")\r\n    }\r\n    return (\r\n        <div className=\"EditWrapper\">\r\n            {singleNote ? \r\n            <>\r\n             <label>Title</label>\r\n            <input value={singleNote.title} onChange={updateNoteInput} name=\"title\"/>\r\n            <label>Body</label>\r\n            <textarea value={singleNote.body} onChange={updateNoteInput} name=\"body\"/>\r\n            <label>Author</label>\r\n            <input value={singleNote.author__name} onChange={updateNoteInput} name=\"author__name\"/>\r\n            <button onClick={updateNoteHandler} className=\"mt-2 btn btn-success\">Update Note</button>   \r\n            <ValidationErrMesages errMessages={errMessages}/>\r\n            </> :null}\r\n        </div>\r\n          \r\n           \r\n           \r\n    )\r\n}\r\n\r\nexport default EditNoteForm\r\n","import React, { useContext , useEffect, useState  } from 'react'\r\nimport {  useParams , useHistory } from 'react-router-dom'\r\nimport { io } from 'socket.io-client';\r\nimport { NotesContext } from '../../../context';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { getSingleNoteById } from '../../../utilys/getSingleNoteById';\r\nimport valid from '../../../utilys/validation';\r\nimport \"./EditNote.css\";\r\nimport EditNoteForm from './EditNoteForm/EditNoteForm';\r\nimport axios from \"../../../utilys/axios\"\r\nfunction EditNote() {\r\n    let socket = io(\"http://localhost:4000\");\r\n    const { id } = useParams();\r\n    const [notesState , setNotesState] = useContext(NotesContext);\r\n    const history = useHistory()\r\n    const [singleNote, updateNoteInput] = useForm(getSingleNoteById(id,notesState.notes));\r\n    const [errMessages , setErrMessages] = useState([])\r\n   \r\n    const updateNoteHandler = () => {\r\n        // Get all values form  singleNote\r\n        let {title , author__name , body } = singleNote;\r\n        // Chek does all inputs all valid\r\n        let notes = [...notesState.cloneNotes];\r\n        if(valid(title,author__name , body).valid){\r\n            // Find note by index and update that Note\r\n            let index = notes.findIndex(note => note.id.toString() === singleNote.id.toString());\r\n            notes[index] = singleNote;\r\n            \r\n            // Update global state after updating a note\r\n            socket.emit(\"updateNote\" , {data:notes,title})\r\n            axios.put(\"/notes\",notes)\r\n            history.push(\"/\")\r\n\r\n        }\r\n        else{\r\n            setErrMessages(valid(title,author__name , body).messages);\r\n        }\r\n       \r\n    }\r\n  \r\n    let edit\r\n         = \r\n     <div className=\"Edit\">\r\n       <EditNoteForm \r\n       updateNoteInput={updateNoteInput} \r\n       singleNote={singleNote} \r\n       updateNoteHandler={updateNoteHandler} \r\n       errMessages={errMessages}\r\n      \r\n       id={id}\r\n       />\r\n    </div>\r\n    return (\r\n        <div>\r\n             {edit}\r\n        </div>\r\n         )\r\n}\r\nexport default EditNote","import React, { useContext } from 'react';\r\nimport { NotesContext } from '../../../context';\r\nimport \"./Alert.css\";\r\n\r\nfunction Alert() {\r\n    const[notesState] = useContext(NotesContext);\r\n    let alert =  notesState.alert.active ? <div className=\"Alert\" style={{color:notesState.alert.color}}> {notesState.alert.msg}</div>  : null\r\n    return (\r\n        <React.Fragment>\r\n            {alert}\r\n        </React.Fragment>\r\n       \r\n   )\r\n    \r\n    }\r\n\r\n    \r\n\r\n\r\nexport default Alert\r\n","import React,{useContext, useEffect, useRef, useState} from 'react';\r\nimport Header from \"./components/Layout/Header/Header\"\r\nimport Footer from \"./components/Layout/Footer/Footer\"\r\n\r\nimport NoteMenager from \"./components/NoteMenager/NoteMenager\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css'\r\nimport Drafts from \"./components/Drafts/Drafts\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { NotesContext } from \"./context\";\r\nimport EditNote from './components/Notes/EditNote/EditNote';\r\nimport  Alert  from './components/UI/Alert/Alert';\r\nimport axios from \"./utilys/axios\";\r\nimport {io} from \"socket.io-client\"\r\nfunction App() {\r\nconst [notesState , setNotesState] = useContext(NotesContext);\r\nlet socket = io(\"http://localhost:4000\");\r\nconst [count , setCount] = useState(4);\r\nuseEffect(() => {\r\n  socket.on(\"addNote\" , data => {\r\n    setNotesState({...notesState,notes:data,cloneNotes:data})\r\n\r\n  });\r\n\r\n  socket.on(\"deleteNote\" , data => {\r\n    setNotesState({...notesState, \r\n      notes :data.data , cloneNotes :data.data , \r\n      alert:{active:true,msg:`Note ${data.title} is deleted!!!`,color:\"red\"}});\r\n  setTimeout(() => { setNotesState({...notesState,toogle:false,alert:{active:false,msg:\"\",color:\"\"}, \r\n   notes :data.data , cloneNotes :data.data })},3000)\r\n  });\r\n  \r\n  socket.on(\"updateNote\" , data => {\r\n    setNotesState({\r\n      ...notesState,notes:data.data ,\r\n      alert:{active:true,msg:`Note ${data.title} is updated`,color:\"orange\"} , \r\n      cloneNotes:data.data\r\n  })\r\n  setTimeout(() => {   \r\n  setNotesState({\r\n      ...notesState,notes:data.data , \r\n      cloneNotes:data.data,\r\n      alert:{active:false,msg:``,color:\"\"}}\r\n  )} ,3000)   \r\n  });\r\n},[])\r\nuseEffect(() => {\r\n  axios.get(\"/notes\").then(data => {\r\n    setNotesState({...notesState,notes:data.data,cloneNotes:data.data})\r\n  })\r\n},[])\r\n  return (\r\n\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n    <Alert/>\r\n      <Header/>\r\n      <NavBar/>   \r\n    </div>\r\n    <Route path=\"/\" exact render={()=>\r\n    <NoteMenager\r\n      />}/>   \r\n    <Route path=\"/drafts\" render={()=><Drafts  notes={notesState.notes}   />}/>\r\n    <Route path=\"/note/:id\" render={()=><EditNote    />}/>\r\n    <Footer/>\r\n    </BrowserRouter>\r\n  \r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport {NotesProvider} from \"./context\"\r\n\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<NotesProvider><App /></NotesProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.d97dde6a.png\";"],"sourceRoot":""}